///////////////////////////////////////////////////////////
//  Line.cs
//  Implementation of the Class Line
//  Generated by Enterprise Architect
//  Created on:      18-Jul-2016 9:14:00 PM
//  Original author: UserAnonymous
///////////////////////////////////////////////////////////

using System.Collections.Generic;
using MySql.Data.MySqlClient;
using System.Data;



public class Line {

	private int _code;
	private string _name;
	private string _type;
    private Order _Order;
    private List<Operator> _operators;

	public Line(){
        _code = 0;
        _name = "";
        _type = "";
        _Order = new Order();
        _operators = new List<Operator>();
	}

	/// 
	/// <param name="id"></param>
	public Line(int code){
        Connection c = new Connection();
        MySqlCommand lineCommand = new MySqlCommand(
            "SELECT lin_code, lin_name FROM productionlines WHERE lin_code = ?CODE"
            );
        lineCommand.Parameters.AddWithValue("?CODE",code);

        DataRow lineInfo = c.GetFirstRow(lineCommand);
        if (lineInfo != null)
        {
            _code = int.Parse(lineInfo["lin_code"].ToString());
            _name = lineInfo["lin_name"].ToString();
        }
        else
            throw new ObjectNotFoundException("Line");
        // Line operators
        MySqlCommand operatorsLineCommand = new MySqlCommand(
            "SELECT ope_id, ope_name, ope_lastname, ope_mothers_lastname FROM line_operators WHERE lin_code = ?CODE"
            );
        operatorsLineCommand.Parameters.AddWithValue("?CODE",code);

        DataTable operators = c.ExecuteQuery(operatorsLineCommand);
        _operators = new List<Operator>();
        foreach (DataRow row in operators.Rows)
            _operators.Add(new Operator(
                int.Parse(row["ope_id"].ToString()),
                row["ope_name"].ToString(),
                row["ope_lastname"].ToString(),
                row["ope_mothers_lastname"].ToString()
                ));
	}

    public Line(int code, string name, Order order,List<Operator> operators)
    {
        _code = code;
        _name = name;
        _Order = order;
        _operators = operators;
    }

	public string Type{
		get{
			return _type;
		}
		set{
			_type = value;
		}
	}

	public string Name{
		get{
			return _name;
		}
		set{
			_name = value;
		}
	}

	public int Code{
		get{
			return _code;
		}
	}

    public override string ToString()
    {
        return _code+":"+_name;
    }

    public override bool Equals(object obj)
    {
        return obj is Line && (obj as Line).Code == this.Code;
    }

    public override int GetHashCode()
    {
        return this.Code;
    }
}//end Line