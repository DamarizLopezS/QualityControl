///////////////////////////////////////////////////////////
//  Answer.cs
//  Implementation of the Class Answer
//  Generated by Enterprise Architect
//  Created on:      18-Jul-2016 9:11:15 PM
//  Original author: UserAnonymous
///////////////////////////////////////////////////////////

using System.Data;
using MySql.Data.MySqlClient;

public class Answer {

	private int _id;
	private AnswerValue _value;
    private Item _Item;
    private Question _Question;

    /// <summary>
    /// Creates an Answer empty
    /// </summary>
	public Answer(){
        _id = 0;
        _value = AnswerValue.NOTVALUE;
        Item = new Item();
        Question = new Question();
	}

    /// <summary>
    /// Creates an Answer by id
    /// </summary>
    /// <param name="id">Id</param>
	public Answer(int id){
        Connection c = new Connection();
        MySqlCommand command = new MySqlCommand(
            "SELECT anw_id, anw_value, itm_serie, que_id FROM answers WHERE anw_id = ?ID"
            );
        command.Parameters.AddWithValue("?ID",id);

        DataRow answerInfo = c.GetFirstRow(command);

        if (answerInfo != null)
        {
            _id = int.Parse(answerInfo["anw_id"].ToString());
            // como saber si un valor entra como null
            _value = (AnswerValue)int.Parse(answerInfo["anw_value"].ToString());
            Item = new Item(int.Parse(answerInfo["itm_serie"].ToString()));
            Question = new Question(int.Parse(answerInfo["que_id"].ToString()));
        }
        else
            throw new ObjectNotFoundException("Answer");
	}

    /// <summary>
    /// 
    /// </summary>
    /// <param name="id"></param>
    /// <param name="value"></param>
    /// <param name="item"></param>
    public Answer(int id, AnswerValue value, Item item, Question question)
    {
        _id = id;
        _value = value;
        Item = item;
        Question = question;
    }

    /// <summary>
    /// 
    /// </summary>
    /// <param name="value"></param>
    /// <param name="item"></param>
    /// <param name="question"></param>
    public Answer(AnswerValue value, Item item, Question question)
    {
        _id = -1;
        _value = value;
        Item = item;
        Question = question;
    }

    /// <summary>
    /// 
    /// </summary>
    /// <param name="item"></param>
    /// <param name="question"></param>
    public Answer(Item item, Question question)
    {
        _id = -1;
        _value = AnswerValue.NOTVALUE;
        Item = item;
        Question = question;
    }

    /// <summary>
    /// 
    /// </summary>
	public int Id{
		get{
			return _id;
		}
		set{
			_id = value;
		}
	}

    /// <summary>
    /// 
    /// </summary>
	public AnswerValue Value{
		get{
			return _value;
		}
		set{
			_value = value;
		}
	}

    public Item Item
    {
        get
        {
            return _Item;
        }

        set
        {
            _Item = value;
        }
    }

    public Question Question
    {
        get
        {
            return _Question;
        }

        set
        {
            _Question = value;
        }
    }
}//end Answer